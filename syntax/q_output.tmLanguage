<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!-- 
modified version of ocam syntax to highlight q output. This is far from accurate, but it gives a nice highlight.
TODO: make actual syntax highlight for q
-->
<dict>
	<key>fileTypes</key>
	<array>
		<string>mly</string>
	</array>
	<key>foldingStartMarker</key>
	<string>%{|%%</string>
	<key>foldingStopMarker</key>
	<string>%}|%%</string>
	<key>keyEquivalent</key>
	<string>^~O</string>
	<key>name</key>
	<string>q output</string>
	<key>patterns</key>
	<array>
		<!-- timestamp (12) -->
		<dict>
			<key>comment</key>
			<string>timestamp</string>
			<key>name</key>
			<string>constant.numeric.complex.timestamp.q</string>
			<key>match</key>
			<!-- For convenience, here are the disallowed chars: 1st group: DT, 2nd group: eTisDdfhjzbmc -->
			<string>(?=(\W|\b))([0-9]{4}\.[0-9]{2}\.[0-9]{2}D[0-9]{2}(:[0-5][0-9]){0,2}(\.[0-9]{3}([a-zA-CE-SU-Z0-9]*[ABCEFGHIJKLMNOPQRSUVWXYZagklnopqrtuvwxy0-9])?|\.[0-9]*|:)?)(?=(\W|\b))</string>
		</dict>

		<!-- datetime (15) -->
		<dict>
			<key>comment</key>
			<string>datetime</string>
			<key>name</key>
			<string>constant.numeric.complex.datetime.q</string>
			<key>match</key>
			<!-- For convenience, here are the disallowed chars: 1st group: D, 2nd group: eTisDdfhjzbmc -->
			<string>(?=(\W|\b))([0-9]{4}\.[0-9]{2}\.[0-9]{2}T[0-9]{2}(:[0-5][0-9]){0,2}(\.[0-9]{3}([a-zA-CE-Z0-9]*[ABCEFGHIJKLMNOPQRSUVWXYZagklnopqrtuvwxy0-9])?|\.[0-9]*|:)?)(?=(\W|\b))</string>
		</dict>

		<!-- timespan (16) -->
		<dict>
			<key>comment</key>
			<string>datetime and timespan</string>
			<key>name</key>
			<string>constant.numeric.complex.timespan.q</string>
			<key>match</key>
			<!-- For convenience, here are the disallowed chars: 1st group: eisdfhjzbm, 2nd group: eTisDdfhjzbmc -->
			<string>(?=(\W|\b))(([0-9]{1,6}D([0-9]{1,2})((:[0-5][0-9]){0,2}|:)(\.[0-9]{0,9}[a-zA-Z0-9]*[A-Zacgklnopqrtuvwxy0-9])?)|([0-9]{2}:[0-5][0-9](:[0-5][0-9]\.[0-9]{4,}|:[0-5][0-9]\.[0-9]{9,}[a-zA-Z0-9]*[ABCEFGHIJKLMNOPQRSUVWXYZagklnopqrtuvwxy0-9])|\.[0-9]{8,}))(?=(\W|\b))</string>
		</dict>

		<!-- time (19) -->
		<dict>
			<key>comment</key>
			<string>time</string>
			<key>name</key>
			<string>constant.numeric.complex.time.q</string>
			<key>match</key>
			<!-- For convenience, here are the disallowed chars: eTisDdfhjzbm -->
			<string>(?=(\W|\b))([0-9]{2}:[0-5][0-9]((:[0-9]{2}(((([ABCEFGHIJKLMNOPQRSUVWXYZacgklnopqrtuvwxy0-9:]){1,2})?([0-5][0-9]){1,2})|\.[0-9]{3}[ABCEFGHIJKLMNOPQRSUVWXYZacgklnopqrtuvwxy0-9]?|\.[0-9]{0,3}))|\.[0-9]{4,7}))(?=(\W|\b))</string>
		</dict>

		<!-- second (18) -->
		<dict>
			<key>comment</key>
			<string>second</string>
			<key>name</key>
			<string>constant.numeric.complex.second.q</string>
			<key>match</key>
			<string>(?=(\W|\b))([0-9]{2}:[0-5][0-9]([0-5][0-9]([0-5][0-9])?|\.[0-9]{2}|:[0-9]{2}|([a-zA-Z]){0,2}[0-5][0-9]))(?=(\W|\b))</string>
		</dict>

		<!-- minute (17) -->
		<dict>
			<key>comment</key>
			<string>minute</string>
			<key>name</key>
			<string>constant.numeric.complex.minute.q</string>
			<key>match</key>
			<!-- For convenience, here are the disallowed chars: eTisDdfhjzbm -->
			<string>(?=(\W|\b))([0-9]{2}:([0-5][0-9]([ABCEFGHIJKLMNOPQRSUVWXYZacgklnopqrtuvwxy0-9:])?)?)(?=(\W|\b))</string>
		</dict>

		<!-- date (14) -->
		<dict>
			<key>comment</key>
			<string>date</string>
			<key>name</key>
			<string>constant.numeric.complex.date.q</string>
			<key>match</key>
			<string>(?=(\W|\b))([0-9]{4}\.[0-9]{2}\.[0-9]{2})(?=(\W|\b))</string>
		</dict>

		<!-- month (13) -->
		<dict>
			<key>comment</key>
			<string>month</string>
			<key>name</key>
			<string>constant.numeric.complex.month.q</string>
			<key>match</key>
			<string>(?=(\W|\b))([0-9]{4,}\.([0][1-9]|[1][0-2])m)(?=(\W|\b))</string>
		</dict>

		<!-- boolean (binary) (1), byte (4), short (5), int (6), long (7), float (9) -->
		<dict>
			<key>comment</key>
			<string>boolean, byte, short, int, long, float</string>
			<key>name</key>
			<string>constant.numeric.complex.q</string>
			<key>match</key>
			<string>((?&lt;=(\W))|(?&lt;=_)|(?&lt;=\b))([-]?[0-9]+[bhijf]?(\.[0-9]+[m]?)?|0x[a-fA-F0-9]+)(?=(\W|\b)|_)</string>
		</dict>

		<!-- real (8) -->
		<dict>
			<key>comment</key>
			<string>real</string>
			<key>name</key>
			<string>constant.numeric.complex.real.q</string>
			<key>match</key>
			<string>((?&lt;=\W)|(?&lt;=_)|(?&lt;=\b))([-]?[0-9]+e[-]?[0-9]+)(?=(\W|\b))</string>
		</dict>

		<!-- nulls -->
		<dict>
			<key>comment</key>
			<string>nulls</string>
			<key>name</key>
			<string>constant.numeric.complex.null.q</string>
			<key>match</key>
			<string>((?&lt;=\W)|(?&lt;=_)|(?&lt;=\b))(0n|0N[ghijepmdznuvt]?)(?=(\W|\b))</string>
		</dict>

		<!-- uuid -->
		<dict>
			<key>comment</key>
			<string>uuid</string>
			<key>name</key>
			<string>source.q</string>
			<key>match</key>
			<string>([0-9a-z][-]*)</string>
		</dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>message.error.q_output</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Variable Definition</string>
			<key>match</key>
			<string>(^error:)\s*(.*)</string>
			<key>name</key>
			<string>source.q_output</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(%{)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.header.begin.q_output</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\s*(%})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.header.end.q_output</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.header.q_output</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.ocaml</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=%})\s*$</string>
			<key>end</key>
			<string>(?:^)(?=%%)</string>
			<key>name</key>
			<string>meta.declarations.q_output</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#declaration-matches</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(%%)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.rules.begin.q_output</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\s*(%%)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.rules.end.q_output</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.rules.q_output</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rules</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>source.ocaml</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(’|‘|“|”)</string>
			<key>name</key>
			<string>invalid.illegal.unrecognized-character.ocaml</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[^\\])(")</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>comment.block.string.quoted.double.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\d\d|[bnrt'"\\])</string>
							<key>name</key>
							<string>comment.block.string.constant.character.escape.q_output</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>declaration-matches</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(%)(token)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.decorator.token.q_output</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.token.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^\s*($|(^\s*(?=%)))</string>
					<key>name</key>
					<string>meta.token.declaration.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#symbol-types</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[A-Z][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>entity.name.type.token.q_output</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%)(left|right|nonassoc)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.decorator.token.associativity.q_output</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.token.associativity.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(^\s*$)|(^\s*(?=%))</string>
					<key>name</key>
					<string>meta.token.associativity.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[A-Z][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>entity.name.type.token.q_output</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[a-z][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>entity.name.function.non-terminal.reference.q_output</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%)(start)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.decorator.start-symbol.q_output</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.start-symbol.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(^\s*$)|(^\s*(?=%))</string>
					<key>name</key>
					<string>meta.start-symbol.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[a-z][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>entity.name.function.non-terminal.reference.q_output</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%)(type)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.decorator.symbol-type.q_output</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.symbol-type.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\s*(?!%)</string>
					<key>name</key>
					<string>meta.symbol-type.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#symbol-types</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[A-Z][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>entity.name.type.token.reference.q_output</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[a-z][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>entity.name.function.non-terminal.reference.q_output</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>precs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.decorator.precedence.q_output</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.precedence.q_output</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.non-terminal.reference.q_output</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.token.reference.q_output</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(%)(prec)\s+(([a-z][a-zA-Z0-9_]*)|(([A-Z][a-zA-Z0-9_]*)))</string>
					<key>name</key>
					<string>meta.precidence.declaration</string>
				</dict>
			</array>
		</dict>
		<key>references</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[a-z][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>entity.name.function.non-terminal.reference.q_output</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Z][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>entity.name.type.token.reference.q_output</string>
				</dict>
			</array>
		</dict>
		<key>rule-patterns</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>((?&lt;!\||:)(\||:)(?!\||:))</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.rule.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(?=\||;)</string>
					<key>name</key>
					<string>meta.rule-match.ocaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#precs</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#semantic-actions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#references</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>rules</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>[a-z][a-zA-Z_]*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.non-terminal.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.rule.q_output</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.non-terminal.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#rule-patterns</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>semantic-actions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>[^\']({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.action.semantic.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.action.semantic.q_output</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.action.semantic.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ocaml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>symbol-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.type-declaration.begin.q_output</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.type-declaration.end.q_output</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.token.type-declaration.q_output</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ocaml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.q_output</string>
	<key>uuid</key>
	<string>1B59327E-9B82-4B78-9411-BC02067DBDF9</string>
</dict>
</plist>
